import java.time.Instant
import java.time.LocalDate

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.github.ben-manes.versions' version '0.26.0'
}

repositories {
    mavenCentral()
}

apply plugin: 'idea'

project.sourceCompatibility = 11
project.targetCompatibility = 11

group = 'uk.gov.justice.probation'

def today = Instant.now()
def todaysDate = LocalDate.now().format('yyyy-MM-dd')
version = System.getenv('CI') ? "${todaysDate}.${System.getenv('CIRCLE_BUILD_NUM')}" : todaysDate

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    baseName = rootProject.name
    manifest {
        attributes(
                'Implementation-Title': rootProject.name, 'Implementation-Version': version
        )
    }
}

springBoot {
    buildInfo {
        properties {
            artifact = rootProject.name
            version = version
            group = group
            name = rootProject.name
            time = today
            additional = [
                    by                   : System.properties['user.name'],
                    operatingSystem      : "${System.properties['os.name']} (${System.properties['os.version']})",
                    continuousIntegration: System.getenv('CI') ? true : false,
                    machine              : InetAddress.localHost.hostName
            ]
        }
    }
}

configurations {
    agentDeps
    agentDeps.transitive = false
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.0.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.0.RELEASE'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor:2.3.0.RELEASE"
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'
    implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'
    implementation group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.3.0.1'
    compile 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.11.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0'

    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'org.projectreactor:reactor-spring:1.0.1.RELEASE'
    implementation 'com.microsoft.azure:applicationinsights-spring-boot-starter:2.6.0'
    implementation group: 'com.microsoft.azure', name: 'applicationinsights-logging-logback', version: '2.6.0'
    implementation 'net.logstash.logback:logstash-logback-encoder:6.4'

	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-oauth2-client'
    testImplementation 'net.javacrumbs.json-unit:json-unit-assertj:2.9.0'
    testImplementation 'org.assertj:assertj-core:3.16.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile "com.github.tomakehurst:wiremock-jre8:2.26.3"
    testCompile 'org.mockito:mockito-core:3.3.3'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
    testRuntimeOnly 'org.apache.activemq:activemq-broker:5.15.3'

    testCompile 'org.apache.activemq:artemis-junit:2.13.0'

    agentDeps 'com.microsoft.azure:applicationinsights-agent:2.5.1-BETA.2'
    compile configurations.agentDeps
}

test {
    useJUnitPlatform()
    testLogging {
        events "started", "passed", "skipped", "failed", "standardError"
        exceptionFormat "short"
        showStackTraces = true
        showExceptions = true
        showCauses = true

        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

task copyAgent(type: Copy) {
    from configurations.agentDeps
    into "$buildDir/libs"
}

assemble.dependsOn copyAgent
